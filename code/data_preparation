library(tidyverse)
library(dplyr)
library(reshape)
data <- read.csv("data_from_NLSY.csv")
final_dictionary <- read_csv("final_dictionary.csv")

clean_data <- data %>% 
  tidyr::pivot_longer(
    -c(R0000100, R0214700, R0214800, R0010300, R0000700, R1214800, R1395100),
    names_to = "variable_id",
    values_to = "value",
    values_drop_na = TRUE
  ) %>% 
  dplyr::left_join(
    final_dictionary
  ) %>% 
  dplyr::filter(value >= 0) %>% 
  dplyr::rename(
    id = R0000100,
    ethnicity = R0214700,
    gender = R0214800,
    religion = R0010300,
    country_of_birth = R0000700,
    citizen_of_us = R1214800,
    drug_use_marijuana_or_hashish_lifetime = R1395100
  ) %>% 
  dplyr::select(-variable_id)


variables <- clean_data %>% 
  dplyr::filter(is.na(job_number)) %>% 
  dplyr::select(id, year, variable, value) %>% 
  tidyr::pivot_wider(
    names_from = variable,
    values_from = value
  )

clean_data_fix <- clean_data %>% 
  dplyr::filter(!is.na(job_number)) %>% 
  dplyr::left_join(variables)

data_to_mutate <- clean_data_fix %>% 
  tidyr::pivot_wider(
    names_from = variable,
    values_from = value
  ) %>% dplyr::select(-c(16))

#mutate variables according to their categorical values

mutated_data <- data_to_mutate %>% 
  dplyr::mutate(
    payrate = log(payrate),
    hourly_pay = log(hourly_pay),
    hourly_rate_of_pay = log(hourly_rate_of_pay),
    total_tenure_inweeks_with_employer_asof_interview_date = total_tenure_inweeks_with_employer_asof_interview_date / 52
  ) %>%
  dplyr::mutate(job_satisfaction = coalesce(job_satisfaction, global_job_satisfaction)) %>% 
  dplyr::select(-global_job_satisfaction) %>% 
  dplyr::mutate(hourly_pay = coalesce(hourly_pay, hourly_rate_of_pay)) %>% 
  dplyr::select(-payrate, -hourly_rate_of_pay) %>% 
  dplyr::mutate(
    gender = as_factor(
    ifelse(gender == 1, "male", "female")
  ), 
  ethnicity = as_factor(dplyr::case_when(
  ethnicity == 1 ~ "hispanic",
  ethnicity == 2 ~ "black",
  ethnicity == 3 ~ "non-hispanic non-black"
)),
religion = as_factor(dplyr::case_when(
  religion == 0 ~ "no_religion",
  religion %in% c(1, 2, 3, 4, 5, 6) ~"christian",
  religion == 7 ~ "catholic",
  religion == 8 ~ "jewish",
  religion == 9 ~ "other"
)),
country_of_birth = as_factor(ifelse(country_of_birth == 1, "us", "other" )),
marital_status = as_factor(
  dplyr::case_when(
    marital_status == 0 ~ "never married",
    marital_status == 1 ~ "married",
    marital_status == 2 ~ "separated",
    marital_status == 3 ~ "divorced",
    marital_status == 5 ~ "remarried",
    marital_status == 6 ~ "widowed"
  )),
family_poverty_previous_year = as_factor(ifelse(family_poverty_previous_year == 1,"in poverty", "not in poverty" )),
covered_union_or_employee_contract = as_factor(ifelse(covered_union_or_employee_contract == 1, "covered", "not covered")),
union_or_employee_association = as_factor(ifelse(union_or_employee_association == 1, "in union", "not in union")),
job_with_state_local_or_federal_government = as_factor(
  dplyr::case_when(
    job_with_state_local_or_federal_government == 1 ~ "federal",
    job_with_state_local_or_federal_government == 2 ~ "state",
    job_with_state_local_or_federal_government == 3 ~ "local"
  )),
new_job_lined_up_before_left = as_factor(ifelse(
  new_job_lined_up_before_left == 1, "yes", "no")),
reason_left = as_factor(
  dplyr::case_when(
    reason_left == 1 ~ "layoff",
    reason_left == 2 ~ "fired",
    reason_left == 3 ~ "programme ended",
    reason_left == 4 ~ "better job",
    reason_left == 5 ~ "quit",
    reason_left == 6 ~ "little money",
    reason_left == 7 ~ "illness"
  )),
class_of_worker = as_factor(
  dplyr::case_when(
  class_of_worker == 1 ~ "private company",
  class_of_worker == 2 ~ "government",
  class_of_worker == 3 ~ "self-employed",
  class_of_worker == 4 ~ "without work")),
citizen_of_us = as_factor(ifelse(
  citizen_of_us == 1, "yes", "no")),
drug_use_marijuana_or_hashish_lifetime = as_factor(
  dplyr::case_when(
    drug_use_marijuana_or_hashish_lifetime == 0 ~ "never used",
    drug_use_marijuana_or_hashish_lifetime == 1 ~ "1-9 occasions",
    drug_use_marijuana_or_hashish_lifetime == 2 ~ "10-39 occasions",
    drug_use_marijuana_or_hashish_lifetime == 3 ~ "40-99 occasions",
    drug_use_marijuana_or_hashish_lifetime == 4 ~ "100-999 occasions",
    drug_use_marijuana_or_hashish_lifetime == 5 ~ "1000+ occasions")))



job_satisfaction_data <- mutated_data %>% 
  dplyr::filter(!is.na(job_satisfaction))


#taking care of missing variables in three steps
#Step 1 imputing numerical missing data with means
library(zoo)

imputing_data <- job_satisfaction_data %>% 
  group_by(id) %>% 
  dplyr::mutate(total_family_income_past_year = ifelse(is.na(total_family_income_past_year), 
                                           mean(total_family_income_past_year, na.rm = T), 
                                           total_family_income_past_year)) %>% 
  dplyr::mutate(self_esteem_score = na.approx(self_esteem_score, na.rm=FALSE)) %>% 
  dplyr::mutate(self_esteem_score = ifelse(is.na(self_esteem_score), 
                                         mean(self_esteem_score, na.rm = T), 
                                         self_esteem_score)) %>% 
  dplyr::mutate(rotter_score = na.approx(rotter_score, na.rm=FALSE)) %>% 
  dplyr::mutate(rotter_score = ifelse(is.na(rotter_score), 
                                      mean(rotter_score, na.rm = T), 
                                      rotter_score)) %>% 
  dplyr::mutate(hours_worked_week = ifelse(is.na(hours_worked_week), 
                                           mean(hours_worked_week, na.rm = T), 
                                           hours_worked_week)) %>% 
  dplyr::mutate(age_at_interview_date = ifelse(is.na(age_at_interview_date), 
                                 mean(age_at_interview_date, na.rm = T), 
                                 age_at_interview_date)) %>% 
  dplyr::mutate(children_household = ifelse(is.na(children_household), 
                                               mean(children_household, na.rm = T), 
                                            children_household)) %>% 
  dplyr::mutate(jobs_since_last_interview = ifelse(is.na(jobs_since_last_interview), 
                                            mean(jobs_since_last_interview, na.rm = T), 
                                            jobs_since_last_interview)) %>% 
  dplyr::mutate(weight = ifelse(is.na(weight), 
                         mean(weight, na.rm = T), 
                         weight)) %>% 
  dplyr::mutate(height_in_feet = ifelse(is.na(height_in_feet), 
                                 mean(height_in_feet, na.rm = T), 
                                 height_in_feet)) %>%
  dplyr::mutate(life_satisfaction = ifelse(is.na(life_satisfaction), 
                                        mean(life_satisfaction, na.rm = T), 
                                        life_satisfaction)) %>%
 dplyr::mutate(height_in_inches = ifelse(is.na(height_in_inches), 
                                          mean(height_in_inches, na.rm = T), 
                                          height_in_inches)) %>% 
dplyr::mutate(hourly_pay = ifelse(is.na(hourly_pay), 
                                          mean(hourly_pay, na.rm = T), 
                                          hourly_pay)) %>% 
dplyr::mutate(total_tenure_inweeks_with_employer_asof_interview_date = ifelse(is.na(total_tenure_inweeks_with_employer_asof_interview_date), 
                                   mean(total_tenure_inweeks_with_employer_asof_interview_date, na.rm = T), 
                                   total_tenure_inweeks_with_employer_asof_interview_date)) %>%
  dplyr::mutate(country_of_birth = ifelse(is.na(country_of_birth), 
                                        mean(country_of_birth, na.rm = T), 
                                        country_of_birth)) %>% 
  dplyr::mutate(importance_of_planning = ifelse(is.na(importance_of_planning),
                                                mean(importance_of_planning, na.rm = T),
                                                importance_of_planning)) %>% 
  dplyr::mutate(status_of_number_of_jobs_ever_reported = ifelse(is.na(status_of_number_of_jobs_ever_reported),
                                                mean(status_of_number_of_jobs_ever_reported, na.rm = T),
                                                status_of_number_of_jobs_ever_reported)) %>% 
  dplyr::mutate(importance_of_luck = ifelse(is.na(importance_of_luck),
                                            mean(importance_of_luck, na.rm = T),
                                            importance_of_luck)) %>% 
  dplyr::mutate(degree_of_influence_own_life = ifelse(is.na(degree_of_influence_own_life),
                                            mean(degree_of_influence_own_life, na.rm = T),
                                            degree_of_influence_own_life)) %>%
  dplyr::mutate(degree_of_control_over_direction_own_life = ifelse(is.na(degree_of_control_over_direction_own_life),
                                                      mean(degree_of_control_over_direction_own_life, na.rm = T),
                                                      degree_of_control_over_direction_own_life)) %>%
  dplyr::mutate(ces_depression = ifelse(is.na(ces_depression),
                              mean(ces_depression, na.rm = T),
                                        ces_depression)) %>% 
  dplyr::select(-union_or_employee_association, 
                -family_poverty_previous_year, 
                -covered_union_or_employee_contract, 
                -new_job_lined_up_before_left, 
                -marital_status, 
                -drug_use_marijuana_or_hashish_lifetime, 
                -class_of_worker, 
                -reason_left, 
                -job_with_state_local_or_federal_government,
                -hours_per_week) %>% 
  ungroup()

#imputing missing variables for categorical value with mice

require(mice)
set.seed(123)
data_binary <- job_satisfaction_data %>% dplyr::select(id, union_or_employee_association, family_poverty_previous_year, covered_union_or_employee_contract, new_job_lined_up_before_left)
imputed_binary <- mice(data_binary, method = "logreg")
data_binary <- mice::complete(imputed_binary)

data_categorical <- job_satisfaction_data %>% dplyr::select(id, 
                                                            marital_status, 
                                                            drug_use_marijuana_or_hashish_lifetime, 
                                                            class_of_worker, 
                                                            reason_left, 
                                                            job_with_state_local_or_federal_government)
imputed_categorical <- mice(data_categorical, method = "polyreg")
data_categorical <- mice::complete(imputed_categorical)

mice_imputed <- cbind(data_binary, data_categorical)
mice_imputed <- subset(mice_imputed) %>% 
                dplyr::select(union_or_employee_association,
                              family_poverty_previous_year,
                              covered_union_or_employee_contract,
                              new_job_lined_up_before_left,
                              marital_status,
                              drug_use_marijuana_or_hashish_lifetime,
                              class_of_worker,
                              reason_left,
                              job_with_state_local_or_federal_government)

#binding both numerically imputed values and categorically imputed values into single dataframe                     
                      
imputed_data_final <- cbind(imputing_data, mice_imputed)

#check how many NAs are missing per column

colSums(is.na(imputed_data_final))

#Step 3 impute NA for the above numerical values using Hmisc to create a dataset containing more imputed observation

install.packages("Hmisc")
library(Hmisc)

imputed_data_final_Hmisc <- aregImpute(~ life_satisfaction + 
                                         height_in_inches + 
                                         height_in_feet + 
                                         ces_depression + 
                                         self_esteem_score +
                                         rotter_score + 
                                         degree_of_influence_own_life +
                                         importance_of_luck +
                                         importance_of_planning +
                                         degree_of_control_over_direction_own_life,
                                       data = job_satisfaction_data, 
                                       n.impute = 5, 
                                       nk = 0)

imputed <-impute.transcan(imputed_data_final_Hmisc, 
                          data=job_satisfaction_data, 
                          imputation=5, 
                          list.out=TRUE, 
                          pr=FALSE, 
                          check=FALSE)

hmisc_imputed <- as.data.frame(do.call(cbind,imputed))

#binding both the dataset imputed with Hmisc and the dataset without Hmisc for evaluation

imputing_data_hmisc <- imputing_data %>% 
                      dplyr::select(-life_satisfaction, 
                                      -height_in_inches, 
                                      -height_in_feet,
                                      -ces_depression, 
                                      -self_esteem_score,
                                      -rotter_score,
                                      -degree_of_influence_own_life,
                                      -importance_of_luck,
                                      -importance_of_planning,
                                      -degree_of_control_over_direction_own_life)


prepped_data_full <- cbind(imputing_data_hmisc, 
                           mice_imputed, 
                           hmisc_imputed)

prepped_data_partial <- cbind(imputing_data, 
                              mice_imputed)

#drop all missing values
prepped_data_full <- drop_na(prepped_data_full)
prepped_data_partial <- drop_na(prepped_data_partial)

#drop all infinite values
is.na(prepped_data_partial) <- sapply(prepped_data_partial, is.infinite)
prepped_data_partial <- drop_na(prepped_data_partial)
is.na(prepped_data_full) <- sapply(prepped_data_full, is.infinite)
prepped_data_full <- drop_na(prepped_data_full)

#center data 

prepped_data_subset <- prepped_data_partial %>% 
  subset()%>% 
  select(degree_of_control_over_direction_own_life, 
         importance_of_planning,
         importance_of_luck,
         degree_of_influence_own_life,
         rotter_score,
         total_family_income_past_year,
         self_esteem_score,
         ces_depression,
         life_satisfaction,
         hours_worked_week,
         hourly_pay,
         total_tenure_inweeks_with_employer_asof_interview_date,
  ) %>% 
  scale(center = TRUE, scale = FALSE)  %>% 
  as.data.frame()

prepped_data_subset2 <- prepped_data_partial %>% 
  subset() %>% 
  select(-degree_of_control_over_direction_own_life, 
                -importance_of_planning,
                -importance_of_luck,
                -degree_of_influence_own_life,
                -rotter_score,
                -total_family_income_past_year,
                -self_esteem_score,
                -ces_depression,
                -life_satisfaction,
                -hours_worked_week,
                -hourly_pay,
                -total_tenure_inweeks_with_employer_asof_interview_date)

prepped_data_partial_center <- cbind(prepped_data_subset, prepped_data_subset2)

#rename features

names(prepped_data_partial)[names(prepped_data_partial)=="total_tenure_inweeks_with_employer_asof_interview_date"] <- "tenure"
names(prepped_data_partial)[names(prepped_data_partial)=="drug_use_marijuana_or_hashish_lifetime"] <- "drug_use"
names(prepped_data_partial)[names(prepped_data_partial)=="new_job_lined_up_before_left"] <- "new_job"
names(prepped_data_partial)[names(prepped_data_partial)=="covered_union_or_employee_contract"] <- "union_or_contract"
names(prepped_data_partial)[names(prepped_data_partial)=="status_of_number_of_jobs_ever_reported"] <- "jobs_reported"
names(prepped_data_partial)[names(prepped_data_partial)=="degree_of_control_over_direction_own_life"] <- "control_own_life"
names(prepped_data_partial)[names(prepped_data_partial)=="degree_of_influence_own_life"] <- "influence_own_life"
names(prepped_data_partial)[names(prepped_data_partial)=="job_with_state_local_or_federal_government"] <- "job_level"

names(prepped_data_full)[names(prepped_data_full)=="total_tenure_inweeks_with_employer_asof_interview_date"] <- "tenure"
names(prepped_data_full)[names(prepped_data_full)=="drug_use_marijuana_or_hashish_lifetime"] <- "drug_use"
names(prepped_data_full)[names(prepped_data_full)=="new_job_lined_up_before_left"] <- "new_job"
names(prepped_data_full)[names(prepped_data_full)=="covered_union_or_employee_contract"] <- "union_or_contract"
names(prepped_data_full)[names(prepped_data_full)=="status_of_number_of_jobs_ever_reported"] <- "jobs_reported"
names(prepped_data_full)[names(prepped_data_full)=="degree_of_control_over_direction_own_life"] <- "control_own_life"
names(prepped_data_full)[names(prepped_data_full)=="degree_of_influence_own_life"] <- "influence_own_life"
names(prepped_data_full)[names(prepped_data_full)=="job_with_state_local_or_federal_government"] <- "job_level"

names(prepped_data_partial_center)[names(prepped_data_partial_center)=="total_tenure_inweeks_with_employer_asof_interview_date"] <- "tenure"
names(prepped_data_partial_center)[names(prepped_data_partial_center)=="drug_use_marijuana_or_hashish_lifetime"] <- "drug_use"
names(prepped_data_partial_center)[names(prepped_data_partial_center)=="new_job_lined_up_before_left"] <- "new_job"
names(prepped_data_partial_center)[names(prepped_data_partial_center)=="covered_union_or_employee_contract"] <- "union_or_contract"
names(prepped_data_partial_center)[names(prepped_data_partial_center)=="status_of_number_of_jobs_ever_reported"] <- "jobs_reported"
names(prepped_data_partial_center)[names(prepped_data_partial_center)=="degree_of_control_over_direction_own_life"] <- "control_own_life"
names(prepped_data_partial_center)[names(prepped_data_partial_center)=="degree_of_influence_own_life"] <- "influence_own_life"
names(prepped_data_partial_center)[names(prepped_data_partial_center)=="job_with_state_local_or_federal_government"] <- "job_level"



#save data
save(prepped_data_full, file = "prepped_data_full.RData")
save(prepped_data_partial, file = "prepped_data_partial.RData")
save(prepped_data_partial_center, file = "prepped_data_partial_center.RData")
